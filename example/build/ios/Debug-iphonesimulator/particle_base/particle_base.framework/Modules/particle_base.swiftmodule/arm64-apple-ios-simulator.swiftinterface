// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature OpaqueTypeErasure -enable-bare-slash-regex -module-name particle_base
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Base58_swift
import Flutter
import Foundation
import ParticleNetworkBase
import ParticleNetworkChains
import RxSwift
import Swift
import SwiftyJSON
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import particle_base
@objc @_inheritsConvenienceInitializers public class ParticleBasePlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin {
  public enum Method : Swift.String {
    case initialize
    case setChainInfo
    case getChainInfo
    case setSecurityAccountConfig
    case setLanguage
    case getLanguage
    case setAppearance
    case setFiatCoin
    case setCustomUIConfigJsonString
    case setThemeColor
    case setUnsupportCountries
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
extension particle_base.ParticleBasePlugin.Method : Swift.Equatable {}
extension particle_base.ParticleBasePlugin.Method : Swift.Hashable {}
extension particle_base.ParticleBasePlugin.Method : Swift.RawRepresentable {}
